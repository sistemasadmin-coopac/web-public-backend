name: Deploy to Cloud Run (Prod)

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: coopac-elsalvador-backend
  PROJECT_NUMBER: 312882262715   # <— si fuera otro, cámbialo
  GAR_LOCATION: southamerica-west1
  GAR_NAME: containers
  IMAGE_NAME: web-public-backend
  SERVICE: web-public-backend-prod
  REGION: southamerica-west1
  SPRING_PROFILES_ACTIVE: prod
  GCS_PROJECT_ID: coopac-elsalvador-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 21 (Temurin) + Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build (Gradle)
        run: ./gradlew clean build -x test

      - name: Short SHA
        id: shortsha
        run: echo "sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      # ---------- Auth GCP via WIF ----------
      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: github-actions-runner@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # ---------- Build & Push ----------
      - name: Build & Push image
        run: |
          IMAGE="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.shortsha.outputs.sha }}"
          echo "Building $IMAGE"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      # ---------- Deploy Cloud Run ----------
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          region: ${{ env.REGION }}
          service: ${{ env.SERVICE }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.shortsha.outputs.sha }}
          env_vars: |
            SPRING_PROFILES_ACTIVE=${{ env.SPRING_PROFILES_ACTIVE }}
            GCS_PROJECT_ID=${{ env.GCS_PROJECT_ID }}
            # La JVM recoge esto automáticamente
            JAVA_TOOL_OPTIONS=-Xmx1536m -XX:+UseZGC -XX:+UnlockExperimentalVMOptions
          # Usa secretos de Google Secret Manager como variables
          secret_vars: |
            DB_USERNAME=DB_USERNAME:latest
            DB_PASSWORD=DB_PASSWORD:latest
            GCS_BUCKET_NAME=GCS_BUCKET_NAME:latest
          flags: |
            --memory=2Gi
            --cpu=2
            --concurrency=100
            --execution-environment=gen2
            --no-cpu-throttling
            --timeout=600
            --min-instances=0
            --max-instances=20

      - name: Output Service URL
        run: echo "URL: ${{ steps.deploy.outputs.url }}"
